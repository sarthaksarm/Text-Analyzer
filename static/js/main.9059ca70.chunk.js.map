{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","heading","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutContent","onClick","toggleMode","aria-checked","role","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","_useState3","_useState4","wordcount","setCount","onChange","input","document","getElementById","myfile","files","length","reader","FileReader","onload","e","lines","target","result","split","join","readAsText","style","color","rows","value","event","background","toUpperCase","showAlert","toLowerCase","mp","Map","arr","i","set","size","filter","Boolean","Alert","alert","message","App","setMode","setAlert","setTimeout","Fragment","body","backgroundColor","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.9059ca70.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    \r\n    <div className=\"container-fluid\" >\r\n      <a className=\"navbar-brand\" href=\"#\">{props.heading}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" \r\n          data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" \r\n          aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        \r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" >\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">{props.aboutContent}</a>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className={`form-check form-switch text-${props.mode==='dark'?'white':'black'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria-checked=\"true\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </nav>\r\n    \r\n\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState(\"\")\r\n    const [wordcount, setCount] = useState(0)\r\n\r\n    const handleChange = (event) =>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        setText(text.toUpperCase())\r\n        props.showAlert(\"Changed to upper case!\", \"success\")\r\n    }\r\n\r\n    const handleClick2 = () =>{\r\n        setText(text.toLowerCase())\r\n    }\r\n\r\n    const handleClick3 = () =>{\r\n        const mp = new Map();\r\n\r\n        let arr = text.split(\" \");\r\n        for(let i=0;i<arr.length;i++)\r\n        {\r\n            mp.set(arr[i],1);\r\n        }\r\n        setCount(mp.size)\r\n    }\r\n\r\n    const handleClick4 = () =>{\r\n        setText(\"\");\r\n        setCount(0);\r\n    }\r\n\r\n    const handleFileUpload = () =>{\r\n\r\n        let input = document.getElementById(\"formFile\")\r\n        //let textArea = document.getElementById(\"myTextArea\")\r\n\r\n        let myfile = input.files[0]\r\n        if (input.files.length === 0) return;\r\n        \r\n        let reader = new FileReader();\r\n\r\n        reader.onload = (e) => {\r\n\r\n            const file = e.target.result;\r\n            const lines = file.split(/\\r\\n|\\n/) //carriage returns and line breaks\r\n\r\n            //textArea.value = lines.join('\\n')\r\n            setText(lines.join('\\n')+\"\")\r\n        }\r\n\r\n        reader.readAsText(myfile);\r\n    }\r\n\r\n  return (\r\n    <div>\r\n\r\n        {/* Upload file */}\r\n        <div className={`mb-3 my-3 text-${props.mode==='dark'?'white':'grey'}`}>\r\n            <label htmlFor=\"formFile\" className=\"form-label\">Upload and Parse file</label>\r\n            <input className=\"form-control\" type=\"file\" id=\"formFile\" onChange={handleFileUpload}/>\r\n        </div>\r\n\r\n            {\r\n                /* To let user upload multiple files\r\n                    <div className=\"mb-3\"> \r\n                        <label htmlFor=\"formFileMultiple\" className=\"form-label\">Multiple files input example</label>\r\n                        <input className=\"form-control\" type=\"file\" id=\"formFileMultiple\" multiple>\r\n                    </div> \r\n                */\r\n            }\r\n\r\n        <div className=\"my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>{props.heading}</h2>\r\n            \r\n            <textarea className=\"form-control\" id=\"myTextArea\" rows=\"7\" value={text} onChange={handleChange}\r\n            style={{background: props.mode==='dark'?'grey':'white', color: props.mode==='dark'?'white':'black'}}>\r\n\r\n            </textarea>\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary\" onClick={handleClick}>\r\n            Covert to UpperCase\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClick2}>\r\n            Convert to LowerCase\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClick3}>\r\n            Count Unique words\r\n        </button>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClick4}>\r\n            Clear\r\n        </button>\r\n\r\n        <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h3>Text Analysis:</h3>\r\n\r\n            <p>\r\n                Number of words: {text.split(\" \").filter(Boolean).length}\r\n            </p>\r\n            \r\n            <p>\r\n                Characters count: {text.length}\r\n            </p>\r\n\r\n            <p>\r\n                Unique words count: {wordcount}\r\n            </p>\r\n        </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong>: {props.alert.message}\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport About from './Components/About';\n\nimport React, { Component }  from 'react';\n\n\n// import{\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\"\n// Switch -> Routes\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      message: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n  }\n \n  const toggleMode = () =>{\n    if(mode===\"dark\"){\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled!\", \"success\");\n    }\n    else{\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode enabled!\", \"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar heading=\"Nav heading\" aboutContent = \"About App\" toggleMode={toggleMode} mode = {mode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n      \n      {/* <Routes>\n        <Route exact path='/about' element = {<About/>}>\n        </Route> */}\n\n        <TextForm mode = {mode} heading = \"Enter text below:\" showAlert={showAlert}/>\n\n        {/* <Route exact path='/' element = {<TextForm mode = {mode} heading = \"Enter text below:\" showAlert={showAlert}/>}>\n        </Route>\n\n      </Routes> */}\n    </div>\n    {/* </Router> */}\n   </>\n  );\n}\n\nexport default App;\n\n// To install react router:\n// npm install react-router-dom\n// https://reactrouter.com/en/6.11.1/start/tutorial#adding-a-router","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}